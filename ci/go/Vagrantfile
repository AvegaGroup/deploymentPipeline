# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

$script_go = <<SCRIPT
    echo Provisioning GO...
    echo ...
    apt-get update
    apt-get install -y unzip
    apt-get install -y curl
    curl http://download01.thoughtworks.com/go/13.4.1/ga/go-server-13.4.1-18342.deb >godeb.deb
    curl http://download01.thoughtworks.com/go/13.4.1/ga/go-agent-13.4.1-18342.deb > godeb_agent.deb
    sudo dpkg -i godeb.deb
    sudo dpkg -i godeb_agent.deb
    echo Done...
SCRIPT

    config.vm.define :cigo do |cfg|
        cfg.vm.box = "precise64"

        cfg.vm.hostname = "cigo"

        # GO
        cfg.vm.network :forwarded_port, guest: 8080, host: 18180

        # Artifactory
        cfg.vm.network :forwarded_port, guest: 8081, host: 18181

        # Create a private network, which allows host-only access to the machine
        # using a specific IP.
        cfg.vm.network :private_network, ip: "192.168.129.111"

        # Provision puppet modules
        cfg.vm.provision :shell, :path => "../../vagrant/install-modules.sh"
        #Ensure CI environment knows of test and prod instances
        #cfg.vm.provision :shell, :inline => "sudo ln -fs /vagrant/vagrant/hosts /etc/hosts"




        # Ugly workaround to handle changed behavior of vagrant 1.4.1 and future
        # More information in: https://github.com/mitchellh/vagrant/pull/2677
        config.vm.synced_folder '../../puppet/modules', '/tmp/vagrant-puppet-1/modules-0'

        # Puppet provisioning
        cfg.vm.provision :puppet do |puppet|
            puppet.manifests_path = "../../puppet/manifests"
            puppet.options        = '--modulepath "/etc/puppet/modules:/tmp/vagrant-puppet-1/modules-0"'
            puppet.manifest_file = "site.pp"
        end

        # Provider-specific configuration for VirtualBox:
        cfg.vm.provider :virtualbox do |vb|
            # Use VBoxManage to customize the VM. For example to change memory:
            vb.customize ["modifyvm", :id, "--memory", "1048"]
            # Fix for problem with NAT-DNS in fault version of VirtualBox at Ubuntu 12.10
            # see https://www.virtualbox.org/ticket/10864
            vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        end

        cfg.vm.provision :shell, :inline => $script_go
    end

end


